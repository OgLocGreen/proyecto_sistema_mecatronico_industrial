|BloquesPruebaControl
tx <= tx_line.DB_MAX_OUTPUT_PORT_TYPE
reloj => PLL:inst1.inclk0
reset => PLL:inst1.areset
reset => uart_tx:inst7.reset
reset => uart_rx:inst.reset
reset => PLL_sacaValorLeds:inst6.reset
rx => uart_rx:inst.rx
dato[0] <= PLL_sacaValorLeds:inst6.dataOut[0]
dato[1] <= PLL_sacaValorLeds:inst6.dataOut[1]
dato[2] <= PLL_sacaValorLeds:inst6.dataOut[2]
dato[3] <= PLL_sacaValorLeds:inst6.dataOut[3]
dato[4] <= PLL_sacaValorLeds:inst6.dataOut[4]
dato[5] <= PLL_sacaValorLeds:inst6.dataOut[5]
dato[6] <= PLL_sacaValorLeds:inst6.dataOut[6]
dato[7] <= PLL_sacaValorLeds:inst6.dataOut[7]


|BloquesPruebaControl|uart_tx:inst7
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => ticker[0].CLK
clk => ticker[1].CLK
clk => ticker[2].CLK
clk => ticker[3].CLK
clk => current_state~4.DATAIN
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => ticker[0].ACLR
reset => ticker[1].ACLR
reset => ticker[2].ACLR
reset => ticker[3].ACLR
reset => current_state~6.DATAIN
data_in[0] => Mux0.IN7
data_in[1] => Mux0.IN6
data_in[2] => Mux0.IN5
data_in[3] => Mux0.IN4
data_in[4] => Mux0.IN3
data_in[5] => Mux0.IN2
data_in[6] => Mux0.IN1
data_in[7] => Mux0.IN0
in_valid => ~NO_FANOUT~
tx <= Selector6.DB_MAX_OUTPUT_PORT_TYPE
accept_in <= accept_in.DB_MAX_OUTPUT_PORT_TYPE


|BloquesPruebaControl|PLL:inst1
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|BloquesPruebaControl|PLL:inst1|altpll:altpll_component
inclk[0] => PLL_altpll:auto_generated.inclk[0]
inclk[1] => PLL_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => PLL_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|BloquesPruebaControl|PLL:inst1|altpll:altpll_component|PLL_altpll:auto_generated
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|BloquesPruebaControl|uart_rx:inst
clk => data_buffer[0].CLK
clk => data_buffer[1].CLK
clk => data_buffer[2].CLK
clk => data_buffer[3].CLK
clk => data_buffer[4].CLK
clk => data_buffer[5].CLK
clk => data_buffer[6].CLK
clk => data_buffer[7].CLK
clk => data_counter[0].CLK
clk => data_counter[1].CLK
clk => data_counter[2].CLK
clk => ticker[0].CLK
clk => ticker[1].CLK
clk => ticker[2].CLK
clk => ticker[3].CLK
clk => rx_state[0].CLK
clk => rx_state[1].CLK
clk => rx_filtered.CLK
clk => current_state~2.DATAIN
reset => data_buffer[0].ACLR
reset => data_buffer[1].ACLR
reset => data_buffer[2].ACLR
reset => data_buffer[3].ACLR
reset => data_buffer[4].ACLR
reset => data_buffer[5].ACLR
reset => data_buffer[6].ACLR
reset => data_buffer[7].ACLR
reset => data_counter[0].ACLR
reset => data_counter[1].ACLR
reset => data_counter[2].ACLR
reset => ticker[0].ACLR
reset => ticker[1].ACLR
reset => ticker[2].ACLR
reset => ticker[3].ACLR
reset => rx_state[0].PRESET
reset => rx_state[1].PRESET
reset => rx_filtered.PRESET
reset => current_state~4.DATAIN
rx => filter.IN1
rx => filter.IN1
data_out[0] <= data_buffer[0].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_buffer[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_buffer[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_buffer[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_buffer[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_buffer[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_buffer[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_buffer[7].DB_MAX_OUTPUT_PORT_TYPE
out_valid <= out_valid.DB_MAX_OUTPUT_PORT_TYPE


|BloquesPruebaControl|PLL_sacaValorLeds:inst6
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => cnt[9].CLK
clk => cnt[10].CLK
clk => cnt[11].CLK
clk => cnt[12].CLK
clk => cnt[13].CLK
clk => cnt[14].CLK
clk => cnt[15].CLK
clk => cnt[16].CLK
clk => cnt[17].CLK
clk => cnt[18].CLK
clk => cnt[19].CLK
clk => cnt[20].CLK
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
reset => cnt.OUTPUTSELECT
dataIn[0] => dataOut[0]$latch.DATAIN
dataIn[1] => dataOut[1]$latch.DATAIN
dataIn[2] => dataOut[2]$latch.DATAIN
dataIn[3] => dataOut[3]$latch.DATAIN
dataIn[4] => dataOut[4]$latch.DATAIN
dataIn[5] => dataOut[5]$latch.DATAIN
dataIn[6] => dataOut[6]$latch.DATAIN
dataIn[7] => dataOut[7]$latch.DATAIN
dataOut[0] <= dataOut[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
dataOut[1] <= dataOut[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
dataOut[2] <= dataOut[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
dataOut[3] <= dataOut[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
dataOut[4] <= dataOut[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
dataOut[5] <= dataOut[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
dataOut[6] <= dataOut[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
dataOut[7] <= dataOut[7]$latch.DB_MAX_OUTPUT_PORT_TYPE


